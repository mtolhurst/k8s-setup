---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wanderer-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wanderer
  name: wanderer
spec:
  selector:
    matchLabels:
      app: wanderer
  template:
    metadata:
      labels:
        app: wanderer
    spec:
      volumes:
        - name: wanderer-pv
          persistentVolumeClaim:
            claimName: wanderer-pvc
      containers:
        - name: wanderer-search
          image: flomp/wanderer-search
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7700
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              port: 7700
              path: /health
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 10
            httpGet:
              port: 7700
              path: /health
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - mountPath: /meili_data/data.ms
              name: wanderer-pv
              subPath: wanderer/search/
          env:
            - name: MEILI_NO_ANALYTICS
              value: "true"
            - name: MEILI_URL
              value: http://localhost:7700
            - name: MEILI_MASTER_KEY
              value: vODkljPcfFANYNepCHyDyGjzAMPcdHnrb6X5KyXQPWo # TODO this really should be an autogenerated secret
        - name: wanderer-db
          image: flomp/wanderer-db
          env:
            - name: MEILI_URL
              value: http://127.0.0.1:7700
            - name: MEILI_MASTER_KEY
              value: vODkljPcfFANYNepCHyDyGjzAMPcdHnrb6X5KyXQPWo # TODO this really should be an autogenerated secret
          ports:
            - containerPort: 8090
              name: wanderer-search
              protocol: TCP
          volumeMounts:
            - mountPath: /pb_data
              name: wanderer-pv
              subPath: wanderer/db/
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
        - name: wanderer-web
          resources:
            requests:
              cpu: 50m
              memory: 200m
          image: flomp/wanderer-web
          env:
          - name: MEILI_NO_ANALYTICS
            value: "true"
          - name: MEILI_URL
            value: http://127.0.0.1:7700
          - name: MEILI_MASTER_KEY
            value: vODkljPcfFANYNepCHyDyGjzAMPcdHnrb6X5KyXQPWo # TODO this really should be an autogenerated secret
          - name: ORIGIN
            value: 'http://10.2.16.3' # TODO this depends on ingress ip
          - name: BODY_SIZE_LIMIT
            value: "Infinity"
          - name: PUBLIC_POCKETBASE_URL
            value: http://127.0.0.1:8090
          - name: PUBLIC_DISABLE_SIGNUP
            value: "false"
          - name: UPLOAD_FOLDER
            value: /app/uploads
          - name: UPLOAD_USER
            value: admin
          - name:  UPLOAD_PASSWORD
            value: administrator
          - name: PUBLIC_VALHALLA_URL
            value: https://valhalla1.openstreetmap.de
          volumeMounts:
            - mountPath: /app/uploads
              name: wanderer-pv
              subPath: wanderer/uploads/
          ports:
            - containerPort: 3000
              name: wanderer-web
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: wanderer
spec:
  ports:
    - port: 3000
      protocol: TCP
      name: wanderer-web
      targetPort: wanderer-web
    - port: 8090
      protocol: TCP
      targetPort: wanderer-search
      name: wanderer-search
  selector:
    app: wanderer
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wanderer-ingress
  namespace: wanderer
spec:
  ingressClassName: cilium
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: wanderer
                port:
                  number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wanderer-db-ingress
  namespace: wanderer
spec:
  ingressClassName: cilium
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: wanderer
                port:
                  number: 8090